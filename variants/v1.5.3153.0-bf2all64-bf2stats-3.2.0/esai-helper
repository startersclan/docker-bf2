#!/bin/sh
set -eu

usage() {
    echo "esai-helper: Get and apply ESAI strategies.ai in levels/<level>/server.zip"
    echo "Options:"
    echo "    -d|--dir                                      BF2 server installation directory. Defaults to '/server/bf2'"
    echo "    -m|--mod                                      Mod. E.g. 'bf2' or 'xpack'. Defaults to 'bf2'"
    echo "Commands:"
    echo "  get [subcommand]"
    echo "    gamemodes <level>                             Get all available levels' gamemodes"
    echo "    maplist <level>                               Generate a maplist"
    echo "    level-strategies <level>                      Get a level's server.zip's ESAI strategies"
    echo "                                                  If <level> if omitted, all levels' strategies are shown"
    echo "    level-strategiescontent <level>               Get file content of level's server.zip's ESAI strategies"
    echo "                                                  If <level> if omitted, all levels' strategies are shown"
    echo "    levels                                        Get all available levels"
    echo "    mods                                          Get all available mods"
    echo "    strategies                                    Get all available ESAI strategies"
    echo "  apply|delete [subcommand]"
    echo "    default-strategy <strategy>                   Apply a default ESAI strategy for all levels."
    echo "                                                  This is the default strategy if a level-strategy is not found for a level"
    echo "    level-strategy <level> <gamemode> <strategy>  Apply the specified ESAI strategy to a specified gamemode"
    echo "                                                  of a specified level's server.zip"
    echo "    -f|--file <space_delimited_file>              Apply ESAI strategies based on a space-delimited file"
    echo "                                                  Format per line: <level> <gamemode> <strategy>"
    echo "                                                  Use '#' for comments"
    echo "Examples:"
    echo "  esai-helper -m bf2 get gamemodes"
    echo "  esai-helper -m xpack get gamemodes"
    echo "  esai-helper -m bf2 get maplist"
    echo "  esai-helper -m bf2 get level-strategies"
    echo "  esai-helper -m bf2 get level-strategiescontent"
    echo "  esai-helper -m bf2 get levels"
    echo "  esai-helper -m bf2 get mods"
    echo "  esai-helper -m bf2 get strategies"
    echo "  esai-helper -m bf2 apply default-strategy mediumfca"
    echo "  esai-helper -m bf2 apply level-strategy highway_tampa gpm_cq 32 mediumfca"
    echo "  esai-helper -m bf2 apply -f strategies.txt"
    echo "  esai-helper -m bf2 delete default-strategy mediumfca"
    echo "  esai-helper -m bf2 delete level-strategy highway_tampa gpm_cq 32 mediumfca"
    echo "  esai-helper -m bf2 delete -f strategies.txt"
}
# Exit if we got no options
if [ $# -eq 0 ]; then usage; exit 1; fi

# Get some options
while test $# -gt 0; do
    case "$1" in
        help|-h|--help)
            usage
            exit 0
            ;;
        -d|--dir)
            shift
            if test $# -gt 0; then
                DIR="$1"
                shift
            fi
            ;;
        -m|--mod)
            shift
            if test $# -gt 0; then
                MOD="$1"
                shift
            fi
            ;;
        get)
            shift
            if [ $# = 0 ]; then
                echo "Missing subcommand"
                usage
                exit 1
            fi
            case "$1" in
                gamemodes)
                    GET_GAMEMODES=1
                    shift
                    if [ "$#" -gt 0 ]; then
                        LEVEL="${1:-}"
                        shift
                    fi
                    break
                    ;;
                maplist)
                    GET_MAPLIST=1
                    shift
                    if [ "$#" -gt 0 ]; then
                        LEVEL="${1:-}"
                        shift
                    fi
                    ;;
                level-strategies)
                    GET_LEVEL_STRATEGIES=1
                    shift
                    if [ "$#" -gt 0 ]; then
                        LEVEL="${1:-}"
                        shift
                    fi
                    ;;
                level-strategiescontent)
                    GET_LEVEL_STRATEGIESCONTENT=1
                    shift
                    if [ "$#" -gt 0 ]; then
                        LEVEL="${1:-}"
                        shift
                    fi
                    ;;
                levels)
                    GET_LEVELS=1
                    shift
                    ;;
                mods)
                    GET_MODS=1
                    shift
                    ;;
                strategies)
                    GET_STRATEGIES=1
                    shift
                    ;;
            esac
            ;;
        apply|delete)
            SUBCOMMAND="$1"
            shift
            if [ "$#" = 0 ]; then
                echo "Missing options or arguments"
                usage
                exit 1
            fi
            case "$1" in
                default-strategy)
                    if [ "$SUBCOMMAND" = 'apply' ]; then
                        APPLY_DEFAULT_STRATEGY=1
                    else
                        DELETE_DEFAULT_STRATEGY=1
                    fi
                    shift
                    STRATEGY="${1:-}"
                    if [ -z "$STRATEGY" ]; then
                        echo "Please specify an ESAI strategy an argument. E.g. mediumfcapb"
                        exit 1
                    fi
                    shift
                    ;;
                level-strategy)
                    if [ "$SUBCOMMAND" = 'apply' ]; then
                        APPLY_LEVEL_STRATEGY=1
                    else
                        DELETE_LEVEL_STRATEGY=1
                    fi
                    shift
                    LEVEL="${1:-}"
                    if [ -z "$LEVEL" ]; then
                        echo "Please specify a level as the first argument. E.g. dalian_plant"
                        exit 1
                    fi
                    shift
                    GAMEMODE="${1:-}"
                    if [ -z "$GAMEMODE" ]; then
                        echo "Please specify a gamemode as the second argument. E.g. gpm_coop"
                        exit 1
                    fi
                    shift
                    SIZE="${1:-}"
                    if [ -z "$SIZE" ]; then
                        echo "Please specify a map size as the third argument. E.g. 16"
                        exit 1
                    fi
                    shift
                    STRATEGY="${1:-}"
                    if [ -z "$STRATEGY" ]; then
                        echo "Please specify an ESAI strategy as the fourth argument. E.g. mediumfcapb"
                        exit 1
                    fi
                    shift
                    ;;
                -f|--file)
                    if [ "$SUBCOMMAND" = 'apply' ]; then
                        APPLY_FILE=1
                    else
                        DELETE_FILE=1
                    fi
                    shift
                    if [ "$#" -gt 0 ]; then
                        FILE="$1"
                        shift
                    fi
                    ;;
                *)
                    echo "Invalid option '$1'" 1>&2
                    usage
                    exit 1
                    ;;
            esac
            ;;
        *)
            echo "Invalid option '$1'" 1>&2
            usage
            exit 1
            ;;
    esac
done

DIR=${DIR:-/server/bf2}
MOD=${MOD:-bf2} # Default mod is mods/bf2
GET_GAMEMODES=${GET_GAMEMODES:-}
GET_MAPLIST=${GET_MAPLIST:-}
GET_LEVEL_STRATEGIES=${GET_LEVEL_STRATEGIES:-}
GET_LEVEL_STRATEGIESCONTENT=${GET_LEVEL_STRATEGIESCONTENT:-}
GET_LEVELS=${GET_LEVELS:-}
GET_MODS=${GET_MODS:-}
GET_STRATEGIES=${GET_STRATEGIES:-}
APPLY_DEFAULT_STRATEGY=${APPLY_DEFAULT_STRATEGY:-}
DELETE_DEFAULT_STRATEGY=${DELETE_DEFAULT_STRATEGY:-}
APPLY_LEVEL_STRATEGY=${APPLY_LEVEL_STRATEGY:-}
DELETE_LEVEL_STRATEGY=${DELETE_LEVEL_STRATEGY:-}
APPLY_FILE=${APPLY_FILE:-}
DELETE_FILE=${DELETE_FILE:-}
LEVEL=${LEVEL:-}
GAMEMODE=${GAMEMODE:-}
SIZE=${SIZE:-}
STRATEGY=${STRATEGY:-}

# Validation
if ! cd "$DIR" 2>/dev/null; then
    echo "No such directory: $DIR"
    exit 1
fi
DIR=$( cd "$DIR" && pwd )
if [ ! -d "$DIR/mods/$MOD" ]; then
    echo  "Invalid mod. Mod directory does not exist: $DIR/mods/$MOD"
    exit 1
fi
if [ -n "$GET_GAMEMODES" ]; then
    SERVER_ZIPS=$( find "$DIR" -path "*/mods/$MOD/levels/${LEVEL:-*}/server.zip" | sort -n )
    if [ -z "$SERVER_ZIPS" ]; then
        echo "No such level: $LEVEL" >&2
        exit 1
    fi
    for i in $( echo "$SERVER_ZIPS" | sort -n ); do
        LEVEL=$( echo "$i" | xargs dirname | xargs basename )
        for j in $( unzip -l "$i" | awk '{print $4}' | grep -iE "gamemodes/[^/]+/[0-9]+/.+" | cut -d '/' -f2-3 | sort -n | uniq || true ); do
            GAMEMODE=$( echo "$j" | cut -d '/' -f1 )
            SIZE=$( echo "$j" | cut -d '/' -f2 )
            echo "$LEVEL $GAMEMODE $SIZE"
        done
    done
fi

if [ -n "$GET_MAPLIST" ]; then
    SERVER_ZIPS=$( find "$DIR" -path "*/mods/$MOD/levels/${LEVEL:-*}/server.zip" | sort -n )
    if [ -z "$SERVER_ZIPS" ]; then
        echo "No such level: $LEVEL" >&2
        exit 1
    fi
    for i in $( echo "$SERVER_ZIPS" | sort -n ); do
        LEVEL=$( echo "$i" | xargs dirname | xargs basename )
        for j in $( unzip -l "$i" | awk '{print $4}' | grep -iE "gamemodes/[^/]+/[0-9]+/.+" | cut -d '/' -f2-3 | sort -n | uniq || true ); do
            GAMEMODE=$( echo "$j" | cut -d '/' -f1 )
            SIZE=$( echo "$j" | cut -d '/' -f2 )
            echo "maplist.append $LEVEL $GAMEMODE $SIZE"
        done
    done
fi

if [ -n "$GET_MODS" ]; then
    ls -1 "$DIR/mods" | sort -n
fi

if [ -n "$GET_LEVELS" ]; then
    ls -1 "$DIR/mods/$MOD/levels" | sort -n
fi

if [ -n "$GET_LEVEL_STRATEGIES" ]; then
    SERVER_ZIPS=$( find "$DIR" -path "*/mods/$MOD/levels/${LEVEL:-*}/server.zip" | sort -n )
    if [ -z "$SERVER_ZIPS" ]; then
        echo "No such level: $LEVEL" >&2
        exit 1
    fi
    for i in $SERVER_ZIPS; do
        STRATEGIES_AI=$( unzip -l "$i" | grep -iE "gamemodes/[^/]+/[0-9]+/[^/]+/strategies.ai" | awk '{print $4}' | sort -n | uniq || true )
        if [ -n "$STRATEGIES_AI" ]; then
            for s in $STRATEGIES_AI; do
                echo "$i $s"
            done
        else
            echo "No strategies found in: $i" >&2
        fi
    done
fi

if [ -n "$GET_LEVEL_STRATEGIESCONTENT" ]; then
    SERVER_ZIPS=$( find "$DIR" -path "*/mods/$MOD/levels/${LEVEL:-*}/server.zip" | sort -n )
    if [ -z "$SERVER_ZIPS" ]; then
        echo "No such level: $LEVEL" >&2
        exit 1
    fi
    ERR=
    for i in $SERVER_ZIPS; do
        echo "Looking in: $i" >&2
        STRATEGIES_AI=$( unzip -l "$i" | grep -iE "gamemodes/[^/]+/[0-9]+/[^/]+/strategies.ai" | awk '{print $4}' | sort -n | uniq || true )
        if [ -n "$STRATEGIES_AI" ]; then
            for s in $STRATEGIES_AI; do
                echo "Content of $s in $i:" >&2
                unzip -p "$i" "$s"
            done
        else
            echo "No strategies found in: $i" >&2
            ERR=1
        fi
    done
    if [ -n "$ERR" ]; then
        exit 1
    fi
fi

if [ -n "$GET_STRATEGIES" ]; then
    cd "$DIR"
    find . | grep -E "mods/$MOD/esai/mapfiles/[^/]+/[^/]+/strategies.ai" | cut -d '/' -f7 | sort -n
fi

if [ -n "$APPLY_DEFAULT_STRATEGY" ]; then
    # A trick not found in ESAI readmes
    # The default ESAI strategy is used when there is no ESAI strategy for a particular level.
    # According to Void, the original author of ESAI, it's easy to add the default ESAI strategy for all maps:
    # 1. All except the last two lines of an ESAI strategy (i.e. mods/bf2/esai/mapfiles/*/<strategy>/strategies.ai) goes into aidefaultstrategies.ai
    # 2. The last two lines go into aidefaultstrategiesadd.ai
    STRATEGIES_AI=$( find "$DIR" | grep -E "mods/$MOD/esai/mapfiles/[^/]+/$STRATEGY/strategies.ai" | head -n1 || true )
    if [ -z "$STRATEGIES_AI" ]; then
        echo "No such strategy: $STRATEGY"
        echo "To get a list of available strategies, run:"
        echo "   esai-helper -m "$MOD" get strategies"
        exit 1
    fi
    CONTENT=$( cat "$STRATEGIES_AI" )
    LINE_COUNT=$( echo "$CONTENT" | wc -l )
    echo "Applying $STRATEGIES_AI to $DIR/mods/$MOD/ai/aidefaultstrategies.ai">&2
    echo "$CONTENT" | head -n $(( $LINE_COUNT - 2 )) > "$DIR/mods/$MOD/ai/aidefaultstrategies.ai"
    echo "Applying $STRATEGIES_AI to $DIR/mods/$MOD/ai/aidefaultstrategiesadd.ai">&2
    echo "$CONTENT" | tail -n 2 > "$DIR/mods/$MOD/ai/aidefaultstrategiesadd.ai"
fi

if [ -n "$DELETE_DEFAULT_STRATEGY" ]; then
    echo "Deleting a default ESAI strategy is not supported. The server needs a default strategy."
    exit 1
fi

if [ -n "$APPLY_LEVEL_STRATEGY" ] || [ -n "$DELETE_LEVEL_STRATEGY" ] || [ -n "$APPLY_FILE" ] || [ -n "$DELETE_FILE" ]; then
    # Validation
    if [ -n "$APPLY_LEVEL_STRATEGY" ] || [ -n "$DELETE_LEVEL_STRATEGY" ]; then
        CONTENT="$LEVEL $GAMEMODE $SIZE $STRATEGY"
    fi
    if [ -n "$APPLY_FILE" ] || [ -n "$DELETE_FILE" ]; then
        if [ ! -f "$FILE" ]; then
            echo "No such file: $FILE"
            exit 1
        fi
        CONTENT=$( cat "$FILE" | grep -v '#' | awk NF || true ) # Remove lines starting with '#' or trailing with '# ...', as well as blank lines
        if [ -z "$CONTENT" ]; then
            echo "No ESAI strategies to apply in: $FILE"
            exit 1
        fi
    fi
    echo "$CONTENT" | while read -r LEVEL GAMEMODE SIZE STRATEGY; do
        SERVER_ZIP="$DIR/mods/$MOD/levels/$LEVEL/server.zip"
        if ! unzip -l "$SERVER_ZIP" | grep -iE "gamemodes/$GAMEMODE/$SIZE/" > /dev/null; then
            echo "The gamemode '$GAMEMODE' does not exist in $SERVER_ZIP at gamemodes/$GAMEMODE/$SIZE/"
            echo "To get a list of available gamemodes, run:"
            echo "   esai-helper -m "$MOD" get gamemodes"
            exit 1
        fi
        STRATEGIES_AI=$( find "$DIR" | grep -E "mods/$MOD/esai/mapfiles/[^/]+/$STRATEGY/strategies.ai" | head -n1 || true )
        if [ -z "$STRATEGIES_AI" ]; then
            echo "No such strategy: $STRATEGY"
            echo "To get a list of available strategies, run:"
            echo "   esai-helper -m "$MOD" get strategies"
            exit 1
        fi
    done

    if [ -n "$APPLY_LEVEL_STRATEGY" ] || [ -n "$APPLY_FILE" ]; then
        echo "$CONTENT" | while read -r LEVEL GAMEMODE SIZE STRATEGY; do
            cd "$DIR/mods/$MOD/levels/$LEVEL"
            SERVER_ZIP="$PWD/server.zip"
            STRATEGIES_AI=$( find "$DIR" | grep -E "mods/$MOD/esai/mapfiles/[^/]+/$STRATEGY/strategies.ai" | head -n1 || true )
            STRATEGIES_AI_DESTINATION_IN_ZIP="gamemodes/$GAMEMODE/$SIZE/ai/strategies.ai"
            echo "Applying strategy $STRATEGIES_AI to $SERVER_ZIP at $STRATEGIES_AI_DESTINATION_IN_ZIP"
            mkdir -p "$( dirname "$STRATEGIES_AI_DESTINATION_IN_ZIP" )" # Same layout as content of server.zip
            cp -f "$STRATEGIES_AI" "$STRATEGIES_AI_DESTINATION_IN_ZIP"
            zip -qru server.zip gamemodes
            rm -rf "$DIR/mods/$MOD/levels/$LEVEL/gamemodes"
        done
    fi

    if [ -n "$DELETE_LEVEL_STRATEGY" ] || [ -n "$DELETE_FILE" ]; then
        echo "$CONTENT" | while read -r LEVEL GAMEMODE SIZE STRATEGY; do
            cd "$DIR/mods/$MOD/levels/$LEVEL"
            SERVER_ZIP="$PWD/server.zip"
            EXISTING_STRATEGIES_AI=$( unzip -l "$SERVER_ZIP" | grep -iE "gamemodes/$GAMEMODE/$SIZE/ai/strategies.ai" | awk '{print $4}' || true )
            if [ -n "$EXISTING_STRATEGIES_AI" ]; then
                for i in $EXISTING_STRATEGIES_AI; do
                    echo "Removing existing strategy $i from $SERVER_ZIP at $i"
                    zip -q -d "$SERVER_ZIP" "$i"
                done
            else
                echo "No existing strategy in: $SERVER_ZIP"
                exit 1
            fi
        done
    fi
fi
